version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: fpl_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./premier-league-backend
      dockerfile: Dockerfile
    container_name: fpl_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      DB_USER: ${DB_USER}
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      PORT: 5000
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./premier-league-backend:/app
      - /app/node_modules

  frontend:
    build:
      context: ./premier-league-frontend
      dockerfile: Dockerfile
    container_name: fpl_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5000
    depends_on:
      backend:
        condition: service_started

volumes:
  db_data: